vendor_id,vendor,product_id,product,version_id,full_cpe_str,version_title,assigner,assignerSourceName,cveNumber,cveId,cveYear,publishDate,updateDate,exploitExists,exploitExistenceChangeDate,isInCISAKEV,assignerId,nvdVulnStatus,summary,evaluatorComment,evaluatorSolution,evaluatorImpact,cisaExploitAdd,cisaActionDue,cisaVulnerabilityName,cisaRequiredAction,cisaShortDescription,cisaNotes,epssScore,epssScoreChangeDate,epssPercentile,configCount,configConditionCount,vendorCommentCount,referenceCount,metricCount,weaknessCount,maxCvssBaseScore,maxCvssBaseScorev2,maxCvssBaseScorev3,maxCvssBaseScorev4,maxCvssBaseScoreChangeDate,maxCvssExploitabilityScore,maxCvssImpactScore,isOverflow,isMemoryCorruption,isSqlInjection,isXss,isDirectoryTraversal,isFileInclusion,isCsrf,isXxe,isSsrf,isOpenRedirect,isInputValidation,isCodeExecution,isBypassSomething,isGainPrivilege,isDenialOfService,isInformationLeak,isUsedForRansomware,no_data
6,Freebsd,7,Freebsd,666463,cpe:2.3:o:freebsd:freebsd:11.4:p13:*:*:*:*:*:*,FreeBSD 11.4 Patch 13,secteam@freebsd.org,FreeBSD,202400007589,CVE-2024-7589,2024,2024-08-11 03:15:52,2024-08-13 16:58:09,no_data,no_data,no_data,28,Analyzed,"A signal handler in sshd(8) may call a logging function that is not async-signal-safe.  The signal handler is invoked when a client does not authenticate within the LoginGraceTime seconds (120 by default).  This signal handler executes in the context of the sshd(8)'s privileged code, which is not sandboxed and runs with full root privileges.\n\nThis issue is another instance of the problem in CVE-2024-6387 addressed by FreeBSD-SA-24:04.openssh.  The faulty code in this case is from the integration of blacklistd in OpenSSH in FreeBSD.\n\nAs a result of calling functions that are not async-signal-safe in the privileged sshd(8) context, a race condition exists that a determined attacker may be able to exploit to allow an unauthenticated remote code execution as root.",no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,0.00063,2024-08-14 23:08:19,0.28019,1,no_data,no_data,3,2,2,8.1,no_data,8.1,no_data,2024-08-12 16:59:56,2.2,5.9,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,1,no_data,no_data,no_data,no_data,no_data,no_data
6,Freebsd,7,Freebsd,666463,cpe:2.3:o:freebsd:freebsd:11.4:p13:*:*:*:*:*:*,FreeBSD 11.4 Patch 13,secteam@freebsd.org,FreeBSD,202400006760,CVE-2024-6760,2024,2024-08-11 02:40:04,2024-10-29 20:35:40,no_data,no_data,no_data,28,Modified,"A logic bug in the code which disables kernel tracing for setuid programs meant that tracing was not disabled when it should have, allowing unprivileged users to trace and inspect the behavior of setuid programs.\n\nThe bug may be used by an unprivileged user to read the contents of files to which they would not otherwise have access, such as the local password database.",no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,0.00087,2024-08-14 23:08:18,0.37673,1,no_data,no_data,1,2,1,7.5,no_data,7.5,no_data,2024-08-13 16:06:37,3.9,3.6,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data
6,Freebsd,7,Freebsd,666463,cpe:2.3:o:freebsd:freebsd:11.4:p13:*:*:*:*:*:*,FreeBSD 11.4 Patch 13,secteam@freebsd.org,FreeBSD,202400006759,CVE-2024-6759,2024,2024-08-11 02:45:15,2024-08-13 15:08:28,no_data,no_data,no_data,28,Analyzed,"When mounting a remote filesystem using NFS, the kernel did not sanitize remotely provided filenames for the path separator character, \""/\"".  This allows readdir(3) and related functions to return filesystem entries with names containing additional path components.\n\nThe lack of validation described above gives rise to a confused deputy problem.  For example, a program copying files from an NFS mount could be tricked into copying from outside the intended source directory, and/or to a location outside the intended destination directory.",no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,0.00047,2024-08-14 23:08:18,0.18317,1,no_data,no_data,1,2,2,5.3,no_data,5.3,no_data,2024-08-12 15:59:53,3.9,1.4,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data
6,Freebsd,7,Freebsd,666463,cpe:2.3:o:freebsd:freebsd:11.4:p13:*:*:*:*:*:*,FreeBSD 11.4 Patch 13,cve@mitre.org,MITRE,202300048795,CVE-2023-48795,2023,2023-12-18 16:15:11,2024-12-02 14:54:27,no_data,no_data,no_data,1,Analyzed,"The SSH transport protocol with certain OpenSSH extensions, found in OpenSSH before 9.6 and other products, allows remote attackers to bypass integrity checks such that some packets are omitted (from the extension negotiation message), and a client and server may consequently end up with a connection for which some security features have been downgraded or disabled, aka a Terrapin attack. This occurs because the SSH Binary Packet Protocol (BPP), implemented by these extensions, mishandles the handshake phase and mishandles use of sequence numbers. For example, there is an effective attack against SSH's use of ChaCha20-Poly1305 (and CBC with Encrypt-then-MAC). The bypass occurs in chacha20-poly1305@openssh.com and (if CBC is used) the -etm@openssh.com MAC algorithms. This also affects Maverick Synergy Java SSH API before 3.1.0-SNAPSHOT, Dropbear through 2022.83, Ssh before 5.1.1 in Erlang/OTP, PuTTY before 0.80, AsyncSSH before 2.14.2, golang.org/x/crypto before 0.17.0, libssh before 0.10.6, libssh2 through 1.11.0, Thorn Tech SFTP Gateway before 3.4.6, Tera Term before 5.1, Paramiko before 3.4.0, jsch before 0.2.15, SFTPGo before 2.5.6, Netgate pfSense Plus through 23.09.1, Netgate pfSense CE through 2.7.2, HPN-SSH through 18.2.0, ProFTPD before 1.3.8b (and before 1.3.9rc2), ORYX CycloneSSH before 2.3.4, NetSarang XShell 7 before Build 0144, CrushFTP before 10.6.0, ConnectBot SSH library before 2.2.22, Apache MINA sshd through 2.11.0, sshj through 0.37.0, TinySSH through 20230101, trilead-ssh2 6401, LANCOM LCOS and LANconfig, FileZilla before 3.66.4, Nova before 11.8, PKIX-SSH before 14.4, SecureCRT before 9.4.3, Transmit5 before 5.10.4, Win32-OpenSSH before 9.5.0.0p1-Beta, WinSCP before 6.2.2, Bitvise SSH Server before 9.32, Bitvise SSH Client before 9.33, KiTTY through 0.76.1.13, the net-ssh gem 7.2.0 for Ruby, the mscdex ssh2 module before 1.15.0 for Node.js, the thrussh library before 0.35.1 for Rust, and the Russh crate before 0.40.2 for Rust.",no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,0.96280,2024-11-29 23:59:02,0.99595,70,6,no_data,236,1,1,5.9,no_data,5.9,no_data,2023-12-28 18:34:15,2.2,3.6,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data
6,Freebsd,7,Freebsd,666463,cpe:2.3:o:freebsd:freebsd:11.4:p13:*:*:*:*:*:*,FreeBSD 11.4 Patch 13,secteam@freebsd.org,FreeBSD,202300005941,CVE-2023-5941,2023,2023-11-08 09:15:08,2023-12-14 10:15:09,no_data,no_data,no_data,28,Modified,In versions of FreeBSD 12.4-RELEASE prior to 12.4-RELEASE-p7 and FreeBSD 13.2-RELEASE prior to 13.2-RELEASE-p5 the __sflush() stdio function in libc does not correctly update FILE objects' write space members for write-buffered streams when the write(2) system call returns an error. Â Depending on the nature of an application that calls libc's stdio functions and the presence of errors returned from the write(2) system call (or an overridden stdio write routine) a heap buffer overflow may occur.  Such overflows may lead to data corruption or the execution of arbitrary code at the privilege level of the calling program.,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,0.00292,2024-12-10 16:50:22,0.69936,1,no_data,no_data,2,1,2,9.8,no_data,9.8,no_data,2023-11-16 16:11:22,3.9,5.9,1,1,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data
6,Freebsd,7,Freebsd,666463,cpe:2.3:o:freebsd:freebsd:11.4:p13:*:*:*:*:*:*,FreeBSD 11.4 Patch 13,secteam@freebsd.org,FreeBSD,202300005368,CVE-2023-5368,2023,2023-10-04 04:15:14,2023-11-29 21:15:08,no_data,no_data,no_data,28,Modified,"On an msdosfs filesystem, the 'truncate' or 'ftruncate' system calls under certain circumstances populate the additional space in the file with unallocated data from the underlying disk device, rather than zero bytes.\n\nThis may permit a user with write access to files on a msdosfs filesystem to read unintended data (e.g. from a previously deleted file).",no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,0.00090,2024-10-10 23:41:38,0.39255,1,no_data,no_data,3,1,2,6.5,no_data,6.5,no_data,2023-10-05 19:12:33,2.8,3.6,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data
6,Freebsd,7,Freebsd,666463,cpe:2.3:o:freebsd:freebsd:11.4:p13:*:*:*:*:*:*,FreeBSD 11.4 Patch 13,secteam@freebsd.org,FreeBSD,202300004809,CVE-2023-4809,2023,2023-09-06 20:15:08,2023-12-21 22:15:15,no_data,no_data,no_data,28,Modified,"In pf packet processing with a 'scrub fragment reassemble' rule, a packet containing multiple IPv6 fragment headers would be reassembled, and then immediately processed.  That is, a packet with multiple fragment extension headers would not be recognized as the correct ultimate payload. Instead a packet with multiple IPv6 fragment headers would unexpectedly be interpreted as a fragmented packet, rather than as whatever the real payload is.\n\n\n\n\nAs a result, IPv6 fragments may bypass pf firewall rules written on the assumption all fragments have been reassembled and, as a result, be forwarded or processed by the host.",no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,0.00079,2024-09-12 23:31:04,0.34803,1,no_data,no_data,5,1,1,7.5,no_data,7.5,no_data,2023-12-21 23:03:58,3.9,3.6,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data
6,Freebsd,7,Freebsd,666463,cpe:2.3:o:freebsd:freebsd:11.4:p13:*:*:*:*:*:*,FreeBSD 11.4 Patch 13,secteam@freebsd.org,FreeBSD,202300003326,CVE-2023-3326,2023,2023-06-22 17:15:45,2023-08-01 23:15:31,no_data,no_data,no_data,28,Modified,"pam_krb5 authenticates a user by essentially running kinit with the password, getting a ticket-granting ticket (tgt) from the Kerberos KDC (Key Distribution Center) over the network, as a way to verify the password. However, if a keytab is not provisioned on the system, pam_krb5 has no way to validate the response from the KDC, and essentially trusts the tgt provided over the network as being valid. In a non-default FreeBSD installation that leverages pam_krb5 for authentication and does not have a keytab provisioned, an attacker that is able to control both the password and the KDC responses can return a valid tgt, allowing authentication to occur for any user on the system.",no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,0.00229,2024-12-02 23:18:55,0.61806,1,no_data,no_data,3,1,2,9.8,no_data,9.8,no_data,no_data,3.9,5.9,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,1,1,no_data,no_data,no_data,no_data
6,Freebsd,7,Freebsd,666463,cpe:2.3:o:freebsd:freebsd:11.4:p13:*:*:*:*:*:*,FreeBSD 11.4 Patch 13,secteam@freebsd.org,FreeBSD,202100029631,CVE-2021-29631,2021,2021-08-30 18:15:09,2021-12-14 21:37:46,no_data,no_data,no_data,28,Analyzed,"In FreeBSD 13.0-STABLE before n246941-20f96f215562, 12.2-STABLE before r370400, 11.4-STABLE before r370399, 13.0-RELEASE before p4, 12.2-RELEASE before p10, and 11.4-RELEASE before p13, certain VirtIO-based device models in bhyve failed to handle errors when fetching I/O descriptors. A malicious guest may cause the device model to operate on uninitialized I/O vectors leading to memory corruption, crashing of the bhyve process, and possibly arbitrary code execution in the bhyve process.",no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,0.00044,no_data,0.10377,1,no_data,no_data,2,2,1,7.8,7.2,7.8,no_data,no_data,3.9,10.0,no_data,1,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data
6,Freebsd,7,Freebsd,666463,cpe:2.3:o:freebsd:freebsd:11.4:p13:*:*:*:*:*:*,FreeBSD 11.4 Patch 13,secteam@freebsd.org,FreeBSD,202100029630,CVE-2021-29630,2021,2021-08-30 19:15:09,2021-12-14 21:37:55,no_data,no_data,no_data,28,Analyzed,"In FreeBSD 13.0-STABLE before n246938-0729ba2f49c9, 12.2-STABLE before r370383, 11.4-STABLE before r370381, 13.0-RELEASE before p4, 12.2-RELEASE before p10, and 11.4-RELEASE before p13, the ggatec daemon does not validate the size of a response before writing it to a fixed-sized buffer allowing a malicious attacker in a privileged network position to overwrite the stack of ggatec and potentially execute arbitrary code.",no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,0.00591,2024-08-05 23:30:44,0.78403,1,no_data,no_data,2,2,1,8.1,7.6,8.1,no_data,no_data,4.9,10.0,no_data,1,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,1,no_data,no_data,no_data,no_data,no_data,no_data
6,Freebsd,7,Freebsd,666463,cpe:2.3:o:freebsd:freebsd:11.4:p13:*:*:*:*:*:*,FreeBSD 11.4 Patch 13,cve@mitre.org,MITRE,202000024863,CVE-2020-24863,2020,2020-09-03 15:15:12,2020-09-11 14:03:48,no_data,no_data,no_data,1,Analyzed,"A memory corruption vulnerability was found in the kernel function kern_getfsstat in MidnightBSD before 1.2.7 and 1.3 through 2020-08-19, and FreeBSD through 11.4, that allows an attacker to trigger an invalid free and crash the system via a crafted size value in conjunction with an invalid mode.",no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,0.00072,no_data,0.29645,2,no_data,no_data,4,2,1,5.5,4.9,5.5,no_data,no_data,3.9,6.9,no_data,1,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data
6,Freebsd,7,Freebsd,666463,cpe:2.3:o:freebsd:freebsd:11.4:p13:*:*:*:*:*:*,FreeBSD 11.4 Patch 13,cve@mitre.org,MITRE,202000010566,CVE-2020-10566,2020,2020-03-14 01:15:13,2020-03-19 16:02:36,no_data,no_data,no_data,1,Analyzed,"grub2-bhyve, as used in FreeBSD bhyve before revision 525916 2020-02-12, mishandles font loading by a guest through a grub2.cfg file, leading to a buffer overflow.",no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,0.00044,no_data,0.10377,1,no_data,no_data,1,2,1,7.8,4.6,7.8,no_data,no_data,3.9,6.4,1,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data
6,Freebsd,7,Freebsd,666463,cpe:2.3:o:freebsd:freebsd:11.4:p13:*:*:*:*:*:*,FreeBSD 11.4 Patch 13,cve@mitre.org,MITRE,202000010565,CVE-2020-10565,2020,2020-03-14 01:15:12,2021-07-21 11:39:24,no_data,no_data,no_data,1,Analyzed,"grub2-bhyve, as used in FreeBSD bhyve before revision 525916 2020-02-12, does not validate the address provided as part of a memrw command (read_* or write_*) by a guest through a grub2.cfg file. This allows an untrusted guest to perform arbitrary read or write operations in the context of the grub-bhyve process, resulting in code execution as root on the host OS.",no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,0.00044,no_data,0.10377,1,no_data,no_data,1,2,1,7.8,7.2,7.8,no_data,no_data,3.9,10.0,1,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data
6,Freebsd,7,Freebsd,666463,cpe:2.3:o:freebsd:freebsd:11.4:p13:*:*:*:*:*:*,FreeBSD 11.4 Patch 13,cve@mitre.org,MITRE,201900006111,CVE-2019-6111,2019,2019-01-31 18:29:01,2023-03-24 18:12:41,no_data,no_data,no_data,1,Analyzed,"An issue was discovered in OpenSSH 7.9. Due to the scp implementation being derived from 1983 rcp, the server chooses which files/directories are sent to the client. However, the scp client only performs cursory validation of the object name returned (only directory traversal attacks are prevented). A malicious scp server (or Man-in-The-Middle attacker) can overwrite arbitrary files in the scp client target directory. If recursive operation (-r) is performed, the server can manipulate subdirectories as well (for example, to overwrite the .ssh/authorized_keys file).",no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,0.00170,2024-06-23 23:59:03,0.54171,21,28,no_data,23,2,1,5.9,5.8,5.9,no_data,no_data,8.6,4.9,no_data,no_data,no_data,no_data,1,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data,no_data
